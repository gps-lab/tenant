name: Azure Login

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  actions: read
  security-events: read
  variables: read

jobs:
  azure-login:
    runs-on: ubuntu-latest
    environment: production
    # Add organization access
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Network Diagnostics
        run: |
          echo "Testing connectivity to GitHub services..."
          
          # Test GitHub API connectivity
          curl -Is https://api.github.com/meta | head -n 1 || echo "Cannot reach GitHub API"
          
          # Test connectivity to key GitHub domains
          for domain in api.github.com github.com raw.githubusercontent.com; do
            echo "Testing connection to $domain..."
            nc -zv $domain 443 2>&1 || echo "Failed to connect to $domain"
          done
          
          # Display current DNS settings
          echo "DNS Settings:"
          cat /etc/resolv.conf
          
          # Display route table
          echo "Route table:"
          ip route list
          
          # Test org variable access
          echo "Testing organization variable access..."
          curl -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/user || echo "Failed to access GitHub API with token"

      - name: Debug Organization Variables
        run: |
          echo "Available variables context:"
          echo "Has AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID != '' }}"
          echo "Has AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID != '' }}"
          echo "Has AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID != '' }}"
          echo "Has AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET != '' }}"

      - name: Validate Azure Credentials
        run: |
          echo "Checking CLIENTID..."
          if [[ -n "${{ vars.AZURE_CLIENT_ID }}" ]]; then
            echo "CLIENTID is present"
            echo "client_id=${{ vars.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          else
            echo "::error::CLIENTID is missing"
            exit 1
          fi

          echo "Checking CLIENTSECRET..."
          if [[ -n "${{ secrets.AZURE_CLIENT_SECRET }}" ]]; then
            echo "CLIENTSECRET is present"
            echo "client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" >> $GITHUB_ENV
          else
            echo "::error::CLIENTSECRET is missing"
            exit 1
          fi

          echo "Checking SUBSCRIPTIONID..."
          if [[ -n "${{ vars.AZURE_SUBSCRIPTION_ID }}" ]]; then
            echo "SUBSCRIPTIONID is present"
            echo "subscription_id=${{ vars.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          else
            echo "::error::SUBSCRIPTIONID is missing"
            exit 1
          fi

          echo "Checking TENANTID..."
          if [[ -n "${{ vars.AZURE_TENANT_ID }}" ]]; then
            echo "TENANTID is present"
            echo "tenant_id=${{ vars.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          else
            echo "::error::TENANTID is missing"
            exit 1
          fi

      - name: Azure Login
        if: success()
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ vars.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ vars.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ vars.AZURE_TENANT_ID }}"}'
          